$var wire 1 ! I_en $end
$var wire 16 " I_dataA $end
$var wire 16 # I_dataB $end
$var wire 1 $ I_dataDwe $end
$var wire 5 % I_aluop $end
$var wire 16 & I_PC $end
$var wire 16 ' I_dataIMM $end
$var wire 16 ( O_dataResult $end
$var wire 1 ) O_dataWriteReg $end
$var wire 1 * O_shouldBranch $end
$var wire 17 + a_sign $end
$var wire 17 , b_sign $end
$var wire 18 - s_result $end
$var wire 1 . s_shouldBranch $end
$var wire 1 / O_memMode $end
$var wire 1 0 sys_clk $end
$dumpvars
$end
#0
0!
b0000000000000000 "
b0000000000000000 #
0$
b00000 %
b0000000000000000 &
b0000000000000000 '
b0000000000000000 (
0)
0*
b00000000000000000 +
b00000000000000000 ,
b000000000000000000 -
0.
0/
00
#5
b0000000000000011 (
1!
10
b0000000000000001 "
b0000000000000010 #
b000000000000000011 -
b1111000111111010 '
#10
00
#15
b0000000000000010 (
10
b0000000000000101 "
b0000000000000011 #
b000000000000000010 -
b00010 %
#20
00
#25
b0010010000000000 (
10
b1111111011101110 "
b0000000000000000 #
b000010010000000000 -
b10010 %
#30
00
#35
b0100000000000000 (
10
b1010101111001101 "
b1010101111001101 #
b000100000000000000 -
#40
00
#45
b0000000000000011 (
10
b0000000000000001 "
b0000000000000010 #
b000000000000000011 -
b00000 %
#50
00
#55
b0000010110110011 (
10
b0000000001010001 "
b0000010101100010 #
b000000010110110011 -
#60
00
#65
b0010010000000000 (
10
b1111111011101110 "
b0000000000000000 #
b000010010000000000 -
b10010 %
#70
00
#75
b0100000000000000 (
10
b1010101111011101 "
b1010101111011101 #
b000100000000000000 -
#80
00
#85
10
0!
b0000000000000000 "
b0000000000000000 #
0$
b00000 %
b0000000000000000 &
b0000000000000000 '
b0000000000000000 (
0)
0*
b00000000000000000 +
b00000000000000000 ,
b000000000000000000 -
0.
0/
00
